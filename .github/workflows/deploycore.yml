
name: 'Deploy Core'

on:
  workflow_dispatch:
    inputs:
      targetEnvironment:
        description: 'Environment to Target'     
        required: true
        default: 'dev'

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Check Curl
      shell: bash
      run: |
        curl --version
        file $(which curl)

    # Login using az login and a service principal, allowing Terraform to access the account
    - name: Azure Login
      shell: pwsh
      run: |
        az login --service-principal -u $env:ARM_CLIENT_ID -p $env:ARM_CLIENT_SECRET --tenant $env:ARM_TENANT_ID
      env:
        ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Whitelist GitHub Runner IP
      shell: pwsh
      run: |
        $ip = Invoke-RestMethod -Uri 'https://api.ipify.org?format=json'

        az keyvault network-rule add --resource-group "postyfox-rg-${{inputs.targetEnvironment}}" --name "postyfox-kv-${{inputs.targetEnvironment}}" --ip-address $ip.ip

    - name: Setup OpenTofu
      uses: opentofu/setup-opentofu@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Tofu Init
      run: tofu init -upgrade -backend-config="key=${{inputs.targetEnvironment}}.tfstate" -reconfigure
      working-directory: /home/runner/work/postyfox-core/postyfox-core/terraform
      env:
        ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}

    - name: Tofu Plan
      run: "tofu plan --var-file=./envs/${{inputs.targetEnvironment}}.tfvars"
      working-directory: /home/runner/work/postyfox-core/postyfox-core/terraform
      env:
        ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}

    - name: Tofu Apply
      run: "tofu apply -auto-approve --var-file=./envs/${{inputs.targetEnvironment}}.tfvars"
      working-directory: /home/runner/work/postyfox-core/postyfox-core/terraform
      env:
        ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}

    - name: Tofu Get Outputs
      id: tofu-output
      run: "tofu output -json"
      working-directory: /home/runner/work/postyfox-core/postyfox-core/terraform
      env:
        ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}      

    - name: Remove GitHub Runner IP
      shell: pwsh
      if: always()
      run: |
        $ip = Invoke-RestMethod -Uri 'https://api.ipify.org?format=json'

        az keyvault network-rule remove --resource-group "postyfox-rg-${{inputs.targetEnvironment}}" --name "postyfox-kv-${{inputs.targetEnvironment}}" --ip-address $ip.ip

    - name: Ensure Function Apps are allowed on Storage FW
      shell: pwsh
      env:
        tofu_out: ${{ steps.tofu-output.outputs.stdout }}
      run: |
        $data = $env:tofu_out
        $dataObj = ConvertFrom-Json $data

        $ipList = $dataObj.dotnet_fa_ip_list.value + $dataObj.nodejs_fa_ip_list.value
        $ipList = $ipList | Select-Object -Unique

        foreach ($ip in $ipList) {
          az keyvault network-rule add --resource-group "postyfox-rg-${{inputs.targetEnvironment}}" --name "postyfox-kv-${{inputs.targetEnvironment}}" --ip-address $ip
        }
        
  codebuild:
    name: 'Code Build'
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.upload-dotnet-fa.outputs.artifact-id }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Build the .NET core Function App
    - name: Setup .NET Core 8.x
      uses: actions/setup-dotnet@v4
      with:
        # Semantic version range syntax or exact version of a dotnet version
        dotnet-version: '8.x'

    - name: Install dotnet Core dependencies
      run: dotnet restore
      working-directory: /home/runner/work/postyfox-core/postyfox-core/PostyFox-NetCore

    - name: Build dotnet Core Function App
      run: dotnet build -c Release -v d
      working-directory: /home/runner/work/postyfox-core/postyfox-core/PostyFox-NetCore

    - name: Build dotnet Posting Function App
      run: dotnet build -c Release -v d
      working-directory: /home/runner/work/postyfox-core/postyfox-core/PostyFox-Posting

    - name: Publish dotnet Core Function App
      run: dotnet publish -v d -o /home/runner/work/output/dotnet-fa
      working-directory: /home/runner/work/postyfox-core/postyfox-core/PostyFox-NetCore

    - name: Publish dotnet Posting Function App
      run: dotnet publish -v d -o /home/runner/work/output/dotnet-posting
      working-directory: /home/runner/work/postyfox-core/postyfox-core/PostyFox-Posting

    - uses: actions/upload-artifact@v4
      name: Upload DotNet Core Function App Artifact
      id: upload-dotnet-fa
      with:
        name: dotnet-fa
        path: /home/runner/work/output/dotnet-fa

    - uses: actions/upload-artifact@v4
      name: Upload DotNet Posting Function App Artifact
      id: upload-dotnet-postingfa
      with:
        name: dotnet-posting
        path: /home/runner/work/output/dotnet-posting      

    - name: Setup Node v20
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: npm install
      run: npm install 
      working-directory: /home/runner/work/postyfox-core/postyfox-core/PostyFox-TypeScript

    - name: npm build
      run: npm run build
      working-directory: /home/runner/work/postyfox-core/postyfox-core/PostyFox-TypeScript

    - name: Zip NodeJS Artifact
      run: zip -r nodejs-fa.zip . --exclude @.funcignore --exclude .funcignore
      working-directory: /home/runner/work/postyfox-core/postyfox-core/PostyFox-TypeScript

    - uses: actions/upload-artifact@v4
      name: Upload NodeJS Function App Artifact
      id: upload-nodejs-fa
      with:
        name: nodejs-fa
        path: /home/runner/work/postyfox-core/postyfox-core/PostyFox-TypeScript/nodejs-fa.zip

  deploy:
    needs: [terraform, codebuild]
    name: 'Deployment of Code'
    runs-on: ubuntu-latest

    steps:
      - name: Azure Login
        shell: pwsh
        run: |
          az login --service-principal -u $env:ARM_CLIENT_ID -p $env:ARM_CLIENT_SECRET --tenant $env:ARM_TENANT_ID
        env:
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}

      - uses: actions/download-artifact@v4
        with:
          name: dotnet-fa
          path: ./artifacts/dotnet-fa

      - uses: actions/download-artifact@v4
        with:
          name: dotnet-posting
          path: ./artifacts/dotnet-posting

      - uses: actions/download-artifact@v4
        with:
          name: nodejs-fa
          path: ./artifacts/nodejs-fa

      - name: Unzip artifact for deployment
        run: unzip ./artifacts/nodejs-fa/nodejs-fa.zip

      - name: Listing
        run: |
          pwd
          ls -laR

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Upload Dot Net Function App'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: postyfox-func-app-dotnet-${{ inputs.targetEnvironment }}
          package: '/home/runner/work/postyfox-core/postyfox-core/artifacts/dotnet-fa/.'

      - name: 'Upload Dot Net Posting Function App'
        uses: Azure/functions-action@v1
        id: posting-fa
        with:
          app-name: postyfox-func-app-post-${{ inputs.targetEnvironment }}
          package: '/home/runner/work/postyfox-core/postyfox-core/artifacts/dotnet-posting/.'

      - name: 'Upload NodeJS Function App'
        uses: Azure/functions-action@v1
        id: nfa
        with:
          app-name: postyfox-func-app-nodejs-${{ inputs.targetEnvironment }}
          respect-funcignore: true
          package: '/home/runner/work/postyfox-core/postyfox-core/artifacts/nodejs-fa/.'
